class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int i=0,j=0;
        vector <double> v;
        while(i<nums1.size() && j<nums2.size())
        {
            if(nums1[i]<nums2[j])
            {
                v.push_back(nums1[i]);
                i++;
            }
            else
            {
                v.push_back(nums2[j]);
                j++;
            }
        }
        if(i<nums1.size())
        {
            while(i<nums1.size())
            {v.push_back(nums1[i]);
            i++;}
        }
        
        if(j<nums2.size())
        {
            while(j<nums2.size())
            {v.push_back(nums2[j]);
            j++;}
        }
        int len =  v.size();
        
        int mid = (0+len-1)/2;
        double median=0.0;
        if(len%2==0)
        {
            median = (v[mid]+v[mid+1])/2.0;
        }
        else
            median = v[mid];
        return median;
    }
};
